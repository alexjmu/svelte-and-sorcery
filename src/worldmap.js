"use strict";

// NxN array of arrays with a tile map for each level (e.g. [mob, floor])
// 'tiles' contain { icon } -> info about the character or glyph that represents them
const worldmap = `
#G_#_,,#GG#.................................
#__#______#.................................
#UU#______#.................................
##+#______#.................................
__________#.G...............................
##__GG____+....K............................
#,,#______#.G...............................
#,,_______#.................................
#__G______#.................................
#GG______G#.................................
###########.................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
............................................
`
  .trim()
  .split("\n")
  .map((l) => Array.from(l.trim()))
  .map((row, _yIdx) =>
    row.map((icon, _xIdx) =>
      isPlatform(icon) ? [{ icon }] : [{ icon }, defaultTile()]
    )
  );

function isPlatform(icon) {
  return [".", "_", "#"].includes(icon);
}
function defaultTile() {
  return { icon: "." };
}
const playerLocation = { x: 15, y: 5 };

const getIconAt = ({ x, y }) => worldmap[y]?.[x]?.[0]?.icon;
const popTileAt = ({ x, y }) => worldmap[y]?.[x]?.shift() || { icon: "0" };
const placeTileAt = ({ tile, location }) =>
  tile && worldmap[location.y]?.[location.x]?.unshift(tile) && location;
const moveTile = ({ from, to }) => {
  console.log(from, to);
  const tile = popTileAt({ ...from });
  return placeTileAt({ tile, location: to });
};
const walkDirection = ({ location, direction }) => {
  const moveVector =
    {
      left: { x: -1, y: 0 },
      right: { x: 1, y: 0 },
      up: { x: 0, y: -1 },
      down: { x: 0, y: 1 },
    }[direction] ||
    (() => {
      throw Error(`bad direction '${direction}'`);
    })();
  const targetLocation = {
    x: location.x + moveVector.x,
    y: location.y + moveVector.y,
  };

  const finalLocation =
    moveTile({
      from: location,
      to: targetLocation,
    }) || location;

  console.log("walking", location, targetLocation, finalLocation);

  return finalLocation;
};

export { getIconAt, walkDirection, playerLocation };
